---
// src/pages/blog/[...slug].astro
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils";

export async function getStaticPaths() {
  try {
    const posts = await getCollection("blog");

    return posts.map((post) => ({
      params: { slug: post.slug },
      props: { post },
    }));
  } catch (error) {
    console.error("Error fetching blog collection:", error);
    return [];
  }
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get related posts (same category)
const allPosts = await getCollection("blog");
const relatedPosts = allPosts
  .filter(
    (p) =>
      p.slug !== post.slug &&
      p.data.categories.some((cat) => post.data.categories.includes(cat)),
  )
  .sort(() => Math.random() - 0.5)
  .slice(0, 3);

// Format the categories for display and links
const categories = post.data.categories.map((category) =>
  typeof category === "string" ? category : category.toString(),
);
---

<Layout
  title={`${post.data.title} - Scripture Speakers`}
  description={post.data.description}
  image={post.data.heroImage}
>
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="mb-8">
      {
        categories && categories.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-4">
            {categories.map((category) => (
              <a
                href={`/blog/category/${category.toLowerCase()}`}
                class="text-sm bg-blue-100 text-blue-800 rounded-full px-3 py-1 hover:bg-blue-200"
              >
                {category}
              </a>
            ))}
          </div>
        )
      }

      <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-4">
        {post.data.title}
      </h1>

      <div class="flex items-center text-gray-600 mb-8">
        <time datetime={post.data.pubDate.toISOString()}>
          {formatDate(post.data.pubDate)}
        </time>
        {
          post.data.updatedDate && (
            <span class="ml-4">
              (Updated: {formatDate(post.data.updatedDate)})
            </span>
          )
        }
      </div>

      {
        post.data.heroImage && (
          <div class="mb-8">
            <Image
              src={post.data.heroImage}
              alt={post.data.title}
              width={1200}
              height={675}
              format="webp"
              class="w-full rounded-lg"
            />
          </div>
        )
      }
    </div>

    <div class="prose prose-lg max-w-none">
      <Content />
    </div>

    {
      relatedPosts.length > 0 && (
        <div class="mt-16 pt-8 border-t border-gray-200">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">
            Related Articles
          </h2>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            {relatedPosts.map((related) => (
              <a href={`/blog/${related.slug}`} class="group">
                <article class="bg-white rounded-lg shadow-md overflow-hidden h-full transition group-hover:shadow-lg">
                  {related.data.heroImage && (
                    <div class="aspect-video overflow-hidden">
                      <Image
                        src={related.data.heroImage}
                        alt={related.data.title}
                        width={400}
                        height={225}
                        format="webp"
                        fit="cover"
                        class="w-full h-full object-cover transition group-hover:scale-105"
                      />
                    </div>
                  )}
                  <div class="p-4">
                    <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
                      {related.data.title}
                    </h3>
                    <p class="text-sm text-gray-600">
                      {formatDate(related.data.pubDate)}
                    </p>
                  </div>
                </article>
              </a>
            ))}
          </div>
        </div>
      )
    }
  </article>
</Layout>
