---
// src/pages/blog/category/[category].astro
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import BlogCard from '../../../components/BlogCard.astro';
import { slugify } from '../../../utils';

// Generate paths for all categories
export async function getStaticPaths() {
  try {
    const posts = await getCollection('blog');
    
    // Extract all categories from posts and flatten the array
    let allCategories: string[] = [];
    posts.forEach(post => {
      if (post.data.categories && Array.isArray(post.data.categories)) {
        allCategories = [...allCategories, ...post.data.categories];
      }
    });
    
    // Get unique categories
    const categories = [...new Set(allCategories)];
  
  return categories.map(category => {
    // Convert category to string if it's not already
    const categoryStr = typeof category === 'string' ? category : category.toString();
    
    // Filter posts that include this category
    const filteredPosts = posts.filter(post => 
      post.data.categories && 
      post.data.categories.some(cat => 
        (typeof cat === 'string' ? cat : cat.toString()).toLowerCase() === categoryStr.toLowerCase()
      )
    ).sort((a, b) => 
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
    );
    
    return {
      params: { category: categoryStr.toLowerCase() },
      props: { category: categoryStr, posts: filteredPosts }
    };
  });
}

const { category, posts } = Astro.props;
---

<Layout title={`${category} - Scripture Speakers Blog`}>
  <section class="bg-blue-800 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <h1 class="text-3xl md:text-4xl font-bold mb-4">
        Category: {category}
      </h1>
      <p class="text-xl text-blue-100">
        Browse all articles about {category.toLowerCase()}.
      </p>
    </div>
  </section>
  
  <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {posts.map(post => (
        <BlogCard post={post} />
      ))}
    </div>
    
    {posts.length === 0 && (
      <div class="text-center py-12">
        <h2 class="text-2xl font-medium text-gray-900 mb-4">
          No posts found in this category.
        </h2>
        <p class="text-gray-600 mb-8">
          Check back soon or browse other categories.
        </p>
        <a 
          href="/blog" 
          class="inline-block bg-blue-600 text-white hover:bg-blue-700 px-6 py-3 rounded-lg font-medium"
        >
          Back to Blog
        </a>
      </div>
    )}
  </section>
</Layout>
